{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{63:function(t,a,s){\"use strict\";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"div\",{staticClass:\"content\"},[s(\"h1\",{attrs:{id:\"adapters\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#adapters\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Adapters\")]),s(\"p\",[t._v(\"Adapters tell Apicase how to work with some API.\")]),s(\"h2\",{attrs:{id:\"why-adapters\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#why-adapters\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Why adapters?\")]),s(\"p\",[t._v(\"The problem of the most of libraries - they are restricted by only one API. Apicase uses adapters and it allows you to use any API.\")]),s(\"p\",[t._v(\"Wanna get all Apicase features using Facebook API? Just wrap it into adapter and use it as well.\")]),s(\"p\",[t._v(\"Wanna use Apicase in your native applications or with SSR? You can use isomorphic or platform-specific APIs as well.\")]),s(\"p\",[t._v(\"Wanna cross-platform support? Feel free to switch between platform-specific adapters (e.g. fetch, node-fetch, whatwg-fetch).\")]),s(\"h2\",{attrs:{id:\"adapter-structure\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#adapter-structure\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Adapter structure\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" adapter \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  createState\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"/* ... */\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  callback\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" ctx \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"/* ... */\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  convert\"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"?\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" payload \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"/* ... */\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  merge\"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"?\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"from\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" to\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"/* ... */\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),s(\"h3\",{attrs:{id:\"createstate-define-default-request-result\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#createstate-define-default-request-result\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" createState - define default request result\")]),s(\"p\",[t._v(\"If your \"),s(\"code\",[t._v(\"callback\")]),t._v(\" won't change result, there will be result from \"),s(\"code\",[t._v(\"createState\")]),t._v(\" method.\")]),s(\"h3\",{attrs:{id:\"callback-all-request-logic-is-here\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#callback-all-request-logic-is-here\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" callback - all request logic is here\")]),s(\"p\",[s(\"code\",[t._v(\"ctx\")]),t._v(\" structure:\")]),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"payload\")]),t._v(\" - request payload\")]),s(\"li\",[s(\"strong\",[t._v(\"resolve(result)\")]),t._v(\" - resolve request and call \"),s(\"code\",[t._v(\"done\")]),t._v(\" hooks\")]),s(\"li\",[s(\"strong\",[t._v(\"reject(result)\")]),t._v(\" - reject request and call \"),s(\"code\",[t._v(\"fail\")]),t._v(\" hooks\")]),s(\"li\",[s(\"strong\",[t._v(\"emit(eventName, ...args)\")]),t._v(\" - emit custom event. You can listen to it using \"),s(\"code\",[t._v(\"req.on(eventName, cb)\")]),t._v(\" or \"),s(\"code\",[t._v(\"Service.on(eventName, cb)\")])]),s(\"li\",[s(\"strong\",[t._v(\"setCancelCallback(cb)\")]),t._v(\" - callback that will be called on \"),s(\"code\",[t._v(\"req.cancel()\")]),t._v(\". It may return Promise so you can \"),s(\"code\",[t._v(\"await req.cancel()\")]),t._v(\" to wait for request termination.\")])]),s(\"h3\",{attrs:{id:\"convert-prepare-your-payload-before-using-in-request\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#convert-prepare-your-payload-before-using-in-request\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" convert - prepare your payload before using in request\")]),s(\"p\",[t._v(\"This is just a helper method that converts payload for \"),s(\"code\",[t._v(\"callback\")]),t._v(\".  You can define default options here, for example.\")]),s(\"div\",{staticClass:\"warning custom-block\"},[s(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"Note\")]),s(\"p\",[s(\"code\",[t._v(\"convert\")]),t._v(\" method doesn't change payload for hooks to not to cause unexpected behaviour.\")])]),s(\"h3\",{attrs:{id:\"merge-custom-merge-strategy-for-payloads\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#merge-custom-merge-strategy-for-payloads\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" merge - custom merge strategy for payloads\")]),s(\"p\",[t._v(\"For now, request options are merged in 2 cases:\")]),s(\"ul\",[s(\"li\",[t._v(\"Using \"),s(\"code\",[t._v(\"Service.extend(opts)\")]),t._v(\" will merge service options and newest ones.\")]),s(\"li\",[t._v(\"Using \"),s(\"code\",[t._v(\"Service.doRequest(opts)\")]),t._v(\" will merge service options and options passed in argument.\")])]),s(\"p\",[s(\"code\",[t._v(\"merge\")]),t._v(\" callback defines custom merge strategy for payload. For example, \"),s(\"code\",[t._v(\"@apicase/adapter-fetch\")]),t._v(\" uses this feature for path-stacking:\")]),s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" Service \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"ApiService\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  adapter\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" fetch\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  url\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'/api'\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// { url: '/api/posts' }\")]),t._v(\"\\nService\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"doRequest\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" url\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'posts'\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// { url: '/another_url' }\")]),t._v(\"\\nService\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"doRequest\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" url\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'/another_url'\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])}],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}